1:"$Sreact.fragment"
2:I[7345,["726","static/chunks/726-d016ea69c699dec1.js","831","static/chunks/app/blog/page-33ade23fe0280553.js"],""]
3:I[9952,[],""]
4:I[8230,[],""]
5:I[3283,["726","static/chunks/726-d016ea69c699dec1.js","177","static/chunks/app/layout-483c6e70ef8bddee.js"],"Analytics"]
6:I[7390,["726","static/chunks/726-d016ea69c699dec1.js","177","static/chunks/app/layout-483c6e70ef8bddee.js"],"SpeedInsights"]
7:I[6587,["953","static/chunks/app/blog/%5Bslug%5D/page-53236f704cda4b7c.js"],"Mdx"]
9:I[9984,[],"OutletBoundary"]
b:I[6392,[],"AsyncMetadataOutlet"]
d:I[9984,[],"ViewportBoundary"]
f:I[9984,[],"MetadataBoundary"]
10:"$Sreact.suspense"
12:I[384,[],""]
:HL["/_next/static/media/ec1a1eae803b668e-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/f980ec13b5b5e554.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/3d78e35bed33a815.css","style"]
8:T2e1e,var Component=(()=>{var h=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var i in e)o(t,i,{get:e[i],enumerable:!0})},c=(t,e,i,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of u(e))!m.call(t,r)&&r!==i&&o(t,r,{get:()=>e[r],enumerable:!(s=p(e,r))||s.enumerable});return t};var b=(t,e,i)=>(i=t!=null?h(g(t)):{},c(e||!t||!t.__esModule?o(i,"default",{value:t,enumerable:!0}):i,t)),w=t=>c(o({},"__esModule",{value:!0}),t);var l=f((k,a)=>{a.exports=_jsx_runtime});var C={};y(C,{default:()=>T,frontmatter:()=>v});var n=b(l()),v={title:"From Dynamic to Static: Converting a Next.js Blog for GitHub Pages",publishedAt:"2025-07-31",summary:"A deep dive into transforming a server-rendered Next.js template into a fully static site for free hosting on GitHub Pages."};function d(t){let e=Object.assign({p:"p",h2:"h2",strong:"strong",code:"code",pre:"pre",h3:"h3",ul:"ul",li:"li",ol:"ol"},t.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:"This document outlines the steps required to convert a dynamic Next.js application, originally designed for server-based hosting, into a fully static site compatible with static hosting platforms like GitHub Pages."}),`
`,(0,n.jsx)(e.h2,{children:"1. The Core Challenge: Dynamic vs. Static Architecture"}),`
`,(0,n.jsx)(e.p,{children:"The primary challenge stems from the architectural differences between dynamic and static web hosting."}),`
`,(0,n.jsxs)(e.p,{children:["A ",(0,n.jsx)(e.strong,{children:"dynamic host"}),", such as Vercel, runs a live Node.js server. This allows a Next.js application to perform server-side rendering (SSR), where pages are generated on-demand for each request. It can also run API routes, which are server-side functions that can execute code, query databases, and generate dynamic content like RSS feeds or social media preview images."]}),`
`,(0,n.jsxs)(e.p,{children:["A ",(0,n.jsx)(e.strong,{children:"static host"}),", like GitHub Pages, does not run a server. It simply serves pre-built HTML, CSS, and JavaScript files. This makes it incredibly fast, secure, and cost-effective, but it means that any operation requiring a server will fail."]}),`
`,(0,n.jsxs)(e.p,{children:["To bridge this gap, we must instruct Next.js to pre-build the entire application into a collection of static files. This is achieved by adding the ",(0,n.jsx)(e.code,{children:"output: 'export'"})," property to the ",(0,n.jsx)(e.code,{children:"next.config.js"})," file."]}),`
`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-javascript:next.config.js",children:`/** @type {import('next').NextConfig} */
const nextConfig = {
  output: 'export',
}

module.exports = nextConfig
`})}),`
`,(0,n.jsxs)(e.p,{children:["This single line is the catalyst for the entire process. It shifts Next.js's mode of operation from running a server to producing a static ",(0,n.jsx)(e.code,{children:"/out"})," directory, which enforces a static-only architecture and reveals any server-dependent code through build errors."]}),`
`,(0,n.jsx)(e.h2,{children:"2. Resolving Static Generation Build Errors"}),`
`,(0,n.jsx)(e.p,{children:"With static export enabled, several parts of the original template, which were designed for a dynamic environment, immediately caused build failures."}),`
`,(0,n.jsx)(e.h3,{children:"2.1. Dynamic API Routes"}),`
`,(0,n.jsxs)(e.p,{children:["The most common source of errors was the presence of dynamic API routes. In a server environment, a route like ",(0,n.jsx)(e.code,{children:"app/rss/route.ts"})," can read from the file system, compile a list of all blog posts, and generate an ",(0,n.jsx)(e.code,{children:"rss.xml"})," file on the fly. In a static build, there is no active server to perform this task."]}),`
`,(0,n.jsxs)(e.ul,{children:[`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"The Solution:"})," The only viable approach is to eliminate this server-side logic. The dynamic routes (",(0,n.jsx)(e.code,{children:"app/rss/route.ts"}),", ",(0,n.jsx)(e.code,{children:"app/og/route.tsx"}),", ",(0,n.jsx)(e.code,{children:"app/sitemap.ts"}),", etc.) were removed entirely. They were replaced with their static equivalents (",(0,n.jsx)(e.code,{children:"rss.xml"}),", ",(0,n.jsx)(e.code,{children:"og.png"}),", ",(0,n.jsx)(e.code,{children:"sitemap.xml"}),") placed directly in the ",(0,n.jsx)(e.code,{children:"public"})," directory. Anything in the ",(0,n.jsx)(e.code,{children:"public"})," folder is served as-is, which is the correct pattern for static assets."]}),`
`]}),`
`,(0,n.jsx)(e.h3,{children:"2.2. MDX Rendering and Dependency Conflicts"}),`
`,(0,n.jsxs)(e.p,{children:["The second major hurdle was the library responsible for rendering MDX (Markdown with JSX) content. The template used ",(0,n.jsx)(e.code,{children:"next-mdx-remote"}),", which repeatedly caused a ",(0,n.jsx)(e.code,{children:"A React Element from an older version of React was rendered"})," error. This error signals a deep dependency conflict where a sub-dependency is using a different, incompatible version of React than the main application, a problem that could not be resolved by simple package manager overrides."]}),`
`,(0,n.jsxs)(e.ul,{children:[`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"The Solution:"})," A full migration to a more modern and stable content-handling library was necessary. We replaced the entire MDX processing pipeline with ",(0,n.jsx)(e.strong,{children:"Contentlayer"}),'. Contentlayer acts as a "content SDK": it reads all your local content files (like blog posts), validates them against a predefined schema, and transforms them into type-safe JSON data that can be easily imported into your application during the build process. This pre-processing step resolves runtime dependency conflicts and makes data handling much cleaner.']}),`
`]}),`
`,(0,n.jsx)(e.p,{children:"The migration involved:"}),`
`,(0,n.jsxs)(e.ol,{children:[`
`,(0,n.jsxs)(e.li,{children:["Removing ",(0,n.jsx)(e.code,{children:"next-mdx-remote"}),"."]}),`
`,(0,n.jsxs)(e.li,{children:["Installing ",(0,n.jsx)(e.code,{children:"contentlayer"})," and ",(0,n.jsx)(e.code,{children:"next-contentlayer"}),"."]}),`
`,(0,n.jsxs)(e.li,{children:["Creating a ",(0,n.jsx)(e.code,{children:"contentlayer.config.ts"})," to define the schema for our posts (",(0,n.jsx)(e.code,{children:"title"}),", ",(0,n.jsx)(e.code,{children:"publishedAt"}),", etc.)."]}),`
`,(0,n.jsxs)(e.li,{children:["Wrapping ",(0,n.jsx)(e.code,{children:"next.config.js"})," with the ",(0,n.jsx)(e.code,{children:"withContentlayer"})," higher-order component."]}),`
`,(0,n.jsx)(e.li,{children:"Updating all data fetching logic from the old system to the new, much simpler Contentlayer API."}),`
`]}),`
`,(0,n.jsx)(e.h3,{children:"2.3. Client vs. Server Component Architecture"}),`
`,(0,n.jsxs)(e.p,{children:["The migration to Contentlayer introduced a new, more subtle architectural error: ",(0,n.jsx)(e.code,{children:'cannot use both "use client" and export function "generateStaticParams()"'}),"."]}),`
`,(0,n.jsx)(e.p,{children:"This error highlights a core concept of the Next.js App Router."}),`
`,(0,n.jsxs)(e.ul,{children:[`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Server Components"})," run exclusively on the server (or at build time). They are ideal for data fetching and can use functions like ",(0,n.jsx)(e.code,{children:"generateStaticParams"})," to tell Next.js which pages to pre-build."]}),`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Client Components"})," are interactive and run in the user's browser. They require the ",(0,n.jsx)(e.code,{children:"'use client'"})," directive at the top of the file and can use client-side hooks like ",(0,n.jsx)(e.code,{children:"useState"})," or, in this case, ",(0,n.jsx)(e.code,{children:"useMDXComponent"}),"."]}),`
`]}),`
`,(0,n.jsx)(e.p,{children:"The error occurred because the blog post page was trying to be both at the same time."}),`
`,(0,n.jsxs)(e.ul,{children:[`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"The Solution:"})," The page was refactored to separate its client and server concerns. The main page file (",(0,n.jsx)(e.code,{children:"app/blog/[slug]/page.tsx"}),") was kept as a ",(0,n.jsx)(e.strong,{children:"Server Component"})," to handle data fetching and ",(0,n.jsx)(e.code,{children:"generateStaticParams"}),". The part that actually renders the MDX content, which requires the client-side ",(0,n.jsx)(e.code,{children:"useMDXComponent"})," hook, was extracted into its own dedicated ",(0,n.jsx)(e.strong,{children:"Client Component"})," (",(0,n.jsx)(e.code,{children:"app/components/mdx-client.tsx"}),")."]}),`
`]}),`
`,(0,n.jsx)(e.h2,{children:"3. Automating Deployment with GitHub Actions"}),`
`,(0,n.jsxs)(e.p,{children:["To streamline the deployment process, a GitHub Actions workflow was created at ",(0,n.jsx)(e.code,{children:".github/workflows/deploy.yml"}),". This workflow automates all the steps required to get the site live on every push to the ",(0,n.jsx)(e.code,{children:"main"})," branch."]}),`
`,(0,n.jsx)(e.p,{children:"The workflow performs the following sequence:"}),`
`,(0,n.jsxs)(e.ol,{children:[`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Checks out the code"})," from the repository."]}),`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Sets up the environment"})," with the correct versions of Node.js and ",(0,n.jsx)(e.code,{children:"pnpm"}),"."]}),`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Installs dependencies"})," using ",(0,n.jsx)(e.code,{children:"pnpm install"}),"."]}),`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Builds the static site"})," using ",(0,n.jsx)(e.code,{children:"pnpm run build"}),", which generates the ",(0,n.jsx)(e.code,{children:"/out"})," directory."]}),`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Deploys the static files"})," from ",(0,n.jsx)(e.code,{children:"/out"})," to a dedicated ",(0,n.jsx)(e.code,{children:"gh-pages"})," branch using the ",(0,n.jsx)(e.code,{children:"peaceiris/actions-gh-pages"})," action."]}),`
`]}),`
`,(0,n.jsxs)(e.p,{children:["To allow the workflow to push to the ",(0,n.jsx)(e.code,{children:"gh-pages"})," branch, it must be granted write permissions:"]}),`
`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-yaml:.github/workflows/deploy.yml",children:`permissions:
  contents: write
`})}),`
`,(0,n.jsx)(e.h2,{children:"4. Configuring the GitHub Pages Environment"}),`
`,(0,n.jsx)(e.p,{children:"The final step is to tell GitHub Pages where to find the website."}),`
`,(0,n.jsxs)(e.ul,{children:[`
`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"The Solution:"})," In the repository's ",(0,n.jsx)(e.strong,{children:"Settings > Pages"}),', under "Build and deployment", the source was configured to ',(0,n.jsx)(e.strong,{children:'"Deploy from a branch"'}),". The branch was set to ",(0,n.jsx)(e.code,{children:"gh-pages"})," with the ",(0,n.jsx)(e.code,{children:"/ (root)"})," folder."]}),`
`]}),`
`,(0,n.jsxs)(e.p,{children:["This tells GitHub Pages to bypass any build process on its own and simply serve the pre-built static files that our GitHub Actions workflow has already placed in the ",(0,n.jsx)(e.code,{children:"gh-pages"})," branch. This separation of concerns\u2014building in the workflow, serving from the branch\u2014is a robust pattern for static deployments."]})]})}function x(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(d,t)})):d(t)}var T=x;return w(C);})();
;return Component;0:{"P":null,"b":"wKyxRYyzVnGabR5vPURrj","p":"","c":["","blog","from-dynamic-to-static"],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","from-dynamic-to-static","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/3d78e35bed33a815.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"text-black bg-white dark:text-white dark:bg-black __variable_ac79ff __variable_8a4d12","children":["$","body",null,{"className":"antialiased max-w-xl mx-4 mt-8 lg:mx-auto","children":["$","main",null,{"className":"flex-auto min-w-0 mt-6 flex flex-col px-2 md:px-0","children":[["$","aside",null,{"className":"-ml-[8px] mb-16 tracking-tight","children":["$","div",null,{"className":"lg:sticky lg:top-20","children":["$","nav",null,{"className":"flex flex-row items-start relative px-0 pb-0 fade md:overflow-auto scroll-pr-6 md:relative","id":"nav","children":["$","div",null,{"className":"flex flex-row space-x-0 pr-10","children":[["$","$L2","/",{"href":"/","className":"transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle relative py-1 px-2 m-1","children":"home"}],["$","$L2","/blog",{"href":"/blog","className":"transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle relative py-1 px-2 m-1","children":"blog"}],["$","$L2","/cv.pdf",{"href":"/cv.pdf","className":"transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle relative py-1 px-2 m-1","children":"cv"}]]}]}]}]}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","section",null,{"children":[["$","h1",null,{"className":"mb-8 text-2xl font-semibold tracking-tighter","children":"404 - Page Not Found"}],["$","p",null,{"className":"mb-4","children":"The page you are looking for does not exist."}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","footer",null,{"className":"mb-16","children":[["$","ul",null,{"className":"font-sm mt-8 flex flex-col space-x-0 space-y-2 text-neutral-600 md:flex-row md:space-x-4 md:space-y-0 dark:text-neutral-300","children":[["$","li",null,{"children":["$","a",null,{"className":"flex items-center transition-all hover:text-neutral-800 dark:hover:text-neutral-100","rel":"noopener noreferrer","target":"_blank","href":"/rss","children":[["$","svg",null,{"width":"12","height":"12","viewBox":"0 0 12 12","fill":"none","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"d":"M2.07102 11.3494L0.963068 10.2415L9.2017 1.98864H2.83807L2.85227 0.454545H11.8438V9.46023H10.2955L10.3097 3.09659L2.07102 11.3494Z","fill":"currentColor"}]}],["$","p",null,{"className":"ml-2 h-7","children":"rss"}]]}]}],["$","li",null,{"children":["$","a",null,{"className":"flex items-center transition-all hover:text-neutral-800 dark:hover:text-neutral-100","rel":"noopener noreferrer","target":"_blank","href":"https://github.com/ossa-ma","children":[["$","svg",null,{"width":"12","height":"12","viewBox":"0 0 12 12","fill":"none","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"d":"M2.07102 11.3494L0.963068 10.2415L9.2017 1.98864H2.83807L2.85227 0.454545H11.8438V9.46023H10.2955L10.3097 3.09659L2.07102 11.3494Z","fill":"currentColor"}]}],["$","p",null,{"className":"ml-2 h-7","children":"github"}]]}]}],["$","li",null,{"children":["$","a",null,{"className":"flex items-center transition-all hover:text-neutral-800 dark:hover:text-neutral-100","rel":"noopener noreferrer","target":"_blank","href":"https://github.com/ossa-ma/blog","children":[["$","svg",null,{"width":"12","height":"12","viewBox":"0 0 12 12","fill":"none","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"d":"M2.07102 11.3494L0.963068 10.2415L9.2017 1.98864H2.83807L2.85227 0.454545H11.8438V9.46023H10.2955L10.3097 3.09659L2.07102 11.3494Z","fill":"currentColor"}]}],["$","p",null,{"className":"ml-2 h-7","children":"view source"}]]}]}]]}],["$","p",null,{"className":"mt-8 text-neutral-600 dark:text-neutral-300","children":["© ",2025," Ossama Chaib"]}]]}],["$","$L5",null,{}],["$","$L6",null,{}]]}]}]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","from-dynamic-to-static","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","section",null,{"children":[["$","script",null,{"type":"application/ld+json","suppressHydrationWarning":true,"dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"From Dynamic to Static: Converting a Next.js Blog for GitHub Pages\",\"datePublished\":\"2025-07-31T00:00:00.000Z\",\"dateModified\":\"2025-07-31T00:00:00.000Z\",\"description\":\"A deep dive into transforming a server-rendered Next.js template into a fully static site for free hosting on GitHub Pages.\",\"image\":\"https://ossa-ma.github.io/og.png\",\"url\":\"https://ossa-ma.github.io/blog/from-dynamic-to-static\",\"author\":{\"@type\":\"Person\",\"name\":\"Ossama Chaib\"}}"}}],["$","h1",null,{"className":"title font-semibold text-2xl tracking-tighter","children":"From Dynamic to Static: Converting a Next.js Blog for GitHub Pages"}],["$","div",null,{"className":"flex justify-between items-center mt-2 mb-8 text-sm","children":["$","p",null,{"className":"text-sm text-neutral-600 dark:text-neutral-400","children":"July 31, 2025"}]}],["$","article",null,{"className":"prose","children":["$","$L7",null,{"code":"$8"}]}]]}],null,["$","$L9",null,{"children":["$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$Ld",null,{"children":"$Le"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$Lf",null,{"children":["$","div",null,{"hidden":true,"children":["$","$10",null,{"fallback":null,"children":"$L11"}]}]}]]}],false]],"m":"$undefined","G":["$12","$undefined"],"s":false,"S":true}
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
a:null
c:{"metadata":[["$","title","0",{"children":"From Dynamic to Static: Converting a Next.js Blog for GitHub Pages | Ossama Chaib"}],["$","meta","1",{"name":"description","content":"A deep dive into transforming a server-rendered Next.js template into a fully static site for free hosting on GitHub Pages."}],["$","meta","2",{"name":"robots","content":"index, follow"}],["$","meta","3",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","4",{"property":"og:title","content":"From Dynamic to Static: Converting a Next.js Blog for GitHub Pages"}],["$","meta","5",{"property":"og:description","content":"A deep dive into transforming a server-rendered Next.js template into a fully static site for free hosting on GitHub Pages."}],["$","meta","6",{"property":"og:url","content":"https://ossa-ma.github.io/blog/from-dynamic-to-static"}],["$","meta","7",{"property":"og:image","content":"https://ossa-ma.github.io/og.png"}],["$","meta","8",{"property":"og:type","content":"article"}],["$","meta","9",{"property":"article:published_time","content":"2025-07-31T00:00:00.000Z"}],["$","meta","10",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","11",{"name":"twitter:title","content":"From Dynamic to Static: Converting a Next.js Blog for GitHub Pages"}],["$","meta","12",{"name":"twitter:description","content":"A deep dive into transforming a server-rendered Next.js template into a fully static site for free hosting on GitHub Pages."}],["$","meta","13",{"name":"twitter:image","content":"https://ossa-ma.github.io/og.png"}]],"error":null,"digest":"$undefined"}
11:"$c:metadata"
